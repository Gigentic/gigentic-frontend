{
  "address": "2xtwCiDhiQ9vuTFpR3wECJaHyvtE7L9pBPbNHdnsk1YS",
  "metadata": {
    "name": "gigentic",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "consumer_to_provider_rating",
      "discriminator": [197, 46, 152, 225, 183, 186, 156, 186],
      "accounts": [
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "review",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "rating",
          "type": "u8"
        },
        {
          "name": "review",
          "type": "string"
        }
      ]
    },
    {
      "name": "initialize_service",
      "discriminator": [201, 217, 126, 168, 40, 110, 122, 89],
      "accounts": [
        {
          "name": "provider",
          "writable": true,
          "signer": true
        },
        {
          "name": "service_registry",
          "writable": true
        },
        {
          "name": "service",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [115, 101, 114, 118, 105, 99, 101]
              },
              {
                "kind": "arg",
                "path": "_unique_id"
              },
              {
                "kind": "account",
                "path": "provider"
              }
            ]
          }
        },
        {
          "name": "mint"
        },
        {
          "name": "token_program"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "unique_id",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "price",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_service_registry",
      "discriminator": [84, 8, 210, 235, 241, 25, 15, 155],
      "accounts": [
        {
          "name": "initializer",
          "docs": [
            "The account of the user deploying and paying for the initialization.",
            "Marked as `mut` because it will be charged for rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "service_registry",
          "docs": [
            "The ServiceRegistry account to be initialized.",
            "`account(zero)` means this account should be created and initialized with zeroes.",
            "It ensures the account is new and prevents double initialization."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "fee_account",
          "type": "pubkey"
        },
        {
          "name": "fee_percentage",
          "type": "u8"
        }
      ]
    },
    {
      "name": "pay_service",
      "discriminator": [181, 29, 236, 80, 246, 226, 34, 174],
      "accounts": [
        {
          "name": "consumer",
          "writable": true,
          "signer": true
        },
        {
          "name": "service",
          "writable": true
        },
        {
          "name": "service_registry",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [101, 115, 99, 114, 111, 119]
              },
              {
                "kind": "account",
                "path": "service"
              },
              {
                "kind": "account",
                "path": "service.provider",
                "account": "Service"
              },
              {
                "kind": "account",
                "path": "consumer"
              }
            ]
          }
        },
        {
          "name": "review",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [114, 101, 118, 105, 101, 119]
              },
              {
                "kind": "arg",
                "path": "review_id"
              },
              {
                "kind": "account",
                "path": "service"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "review_id",
          "type": "string"
        }
      ]
    },
    {
      "name": "provider_to_consumer_rating",
      "discriminator": [239, 50, 253, 210, 227, 54, 245, 169],
      "accounts": [
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "review",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "rating",
          "type": "u8"
        },
        {
          "name": "review",
          "type": "string"
        }
      ]
    },
    {
      "name": "sign_service",
      "discriminator": [170, 73, 190, 114, 213, 177, 176, 218],
      "accounts": [
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "service",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [101, 115, 99, 114, 111, 119]
              },
              {
                "kind": "account",
                "path": "service"
              },
              {
                "kind": "account",
                "path": "service.provider",
                "account": "Service"
              },
              {
                "kind": "account",
                "path": "signer"
              }
            ]
          }
        },
        {
          "name": "service_provider",
          "docs": ["CHECK : This is an account info, not an account"],
          "writable": true
        },
        {
          "name": "fee_account",
          "docs": ["CHECK : SAFE"],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "Escrow",
      "discriminator": [31, 213, 123, 187, 186, 22, 218, 155]
    },
    {
      "name": "Review",
      "discriminator": [124, 63, 203, 215, 226, 30, 222, 15]
    },
    {
      "name": "Service",
      "discriminator": [144, 62, 76, 129, 167, 36, 151, 250]
    },
    {
      "name": "ServiceRegistry",
      "discriminator": [105, 133, 96, 79, 207, 176, 202, 71]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "DescriptionTooLong",
      "msg": "Description is too long"
    },
    {
      "code": 6001,
      "name": "ServiceAlreadyInitialized",
      "msg": "Service already initialized"
    },
    {
      "code": 6002,
      "name": "Overflow",
      "msg": "Overflow"
    },
    {
      "code": 6003,
      "name": "ReviewError",
      "msg": "ReviewERROR"
    },
    {
      "code": 6004,
      "name": "NoServicesRegistered",
      "msg": "No services registered"
    },
    {
      "code": 6005,
      "name": "InvalidAmount",
      "msg": "Provide Amount Greater than 0"
    },
    {
      "code": 6006,
      "name": "UnauthorizedAccess",
      "msg": "Unauthorized access"
    },
    {
      "code": 6007,
      "name": "InvalidState",
      "msg": "The contract is in an invalid state for the requested operation."
    },
    {
      "code": 6008,
      "name": "TransferFailed",
      "msg": "Fund transfer failed."
    },
    {
      "code": 6009,
      "name": "InvalidRating",
      "msg": "Invalid rating. Rating must be between 0 and 5."
    },
    {
      "code": 6010,
      "name": "NoReviews",
      "msg": "No reviews found"
    }
  ],
  "types": [
    {
      "name": "Escrow",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "consumer",
            "type": "pubkey"
          },
          {
            "name": "service_provider",
            "type": "pubkey"
          },
          {
            "name": "fee_percentage",
            "type": "u8"
          },
          {
            "name": "expected_amount",
            "type": "u64"
          },
          {
            "name": "fee_account",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "Review",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "review_id",
            "type": "string"
          },
          {
            "name": "provider_to_consumer_rating",
            "type": "u8"
          },
          {
            "name": "consumer_to_provider_rating",
            "type": "u8"
          },
          {
            "name": "consumer",
            "type": "pubkey"
          },
          {
            "name": "service_provider",
            "type": "pubkey"
          },
          {
            "name": "provider_to_customer_review",
            "type": "string"
          },
          {
            "name": "customer_to_provider_review",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Service",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "provider",
            "type": "pubkey"
          },
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "reviews",
            "type": {
              "vec": "pubkey"
            }
          }
        ]
      }
    },
    {
      "name": "ServiceRegistry",
      "docs": [
        "`ServiceRegistry` is an account that maintains a list of public keys for all registered services.",
        "It acts as a central directory for tracking and accessing service accounts within the program."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "service_account_addresses",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "fee_account",
            "type": "pubkey"
          },
          {
            "name": "fee_percentage",
            "type": "u8"
          }
        ]
      }
    }
  ]
}
